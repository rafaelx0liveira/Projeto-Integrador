.header{
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: space-between;
  align-items: center;
  padding-top: 20px;
  padding-bottom: 20px;
  font-family: var(--font-roboto);
}

.header a{
  color: var(--color-1);
}

.header a:hover{
  color: var(--color-p1);
}


.header-menu,
.header-login{
  display: flex;
  flex-wrap: wrap;
  gap: 40px;
}

.header-menu a{
  display: inline-block;
  padding: 16px 0px;
  position: relative;
}

.header-login button{
  position: relative;
  display: inline-block;
}

header-menu a::after {
  content: "";
  display: block;
  height: 2px;
  width: 0;
  background: var(--color-p1);
  margin-top: 4px;
  transition: 0.3s;
  position: absolute;
}

.header-menu a:hover::after,
.header-menu a.ativo::after
{
  width: 100%;
}

.products_list{
  padding-top: 60px;
  padding-bottom: 120px;
}

.products_list h2{
  margin-bottom: 40px;
}

.products_list ul{
  display: flex;
  gap: 40px;
  padding: 0 20px 20px 20px;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;

    /*A propriedade overflow especifica quando o conteúdo de um elemento de nível de bloco deve ser cortado, exibido com barras de rolagem ou se transborda do elemento.

  O uso da propriedade overflow com valor diferente de visible (seu valor padrão), criará um novo contexto de formatação de bloco. Isto é tecnicamente necessário para evitar que um conteúdo flutuante que entre em contato com o objeto dentro da área de rolamento e quebre as linhas do conteúdo para ajustar a disposição do texto. A quebra das linhas ocorre sempre que a barra de rolagem é utilizada, tornando a experiência de rolagem lenta.

  ********
  Valores:
  ********
  -> visible:
    Valor padrão. O conteúdo não é cortado e pode ser renderizado para fora da caixa de conteúdo.
  -> hidden:
    O conteúdo é cortado e nenhuma barra de rolagem é exibida.
  -> scroll:
    O conteúdo é acessível através de barras de rolagem que são exibidas mesmo que o conteúdo não precise. Isso evita o problema de barras de rolagem aparecendo e desaparecendo quando o conteúdo é dinâmico. Impressoras podem imprimir o conteúdo vazado.
  -> auto:
    Depende do navegador utilizado. Navegadores desktop como o Firefox geralmente exibem barras de rolagem apenas quando necessário.*/
    overflow-x: auto;
}

.products_list li{
  min-width: 280px;
}

.products_list a{
  /* Alterando o padrão que é inline */
  display: block;
}

.products_list img{
  margin-bottom: 16px;
  border-radius: 4px;
}

.products_list h3{
  margin-bottom: 8px;
  display: flex;
  align-items: center;
}

.products_list h3::before{
  content: '';
  display: inline-block;
  height: 8px;
  width: 12px;
  margin-right: 8px;
  background-color: var(--color-p1);
  transition: width 0.3s;
}

.products_list a:hover h3::before{
  width: 30px;
}
.body {
 color: #FFF8F5;
 text-align: center;
}
.products_list li span{
  padding-left: 20px;
}

/* width */
::-webkit-scrollbar {
  width: 10px;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--color-p1); 
  border-radius: 10px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: var(--color-p3); 
}
.footer-bg{
  background-color: var(--color-p1);
}

.footer{
  display: grid;
  grid-template-columns: 3fr 3fr 3fr 3fr;
  gap: 40px;
  padding-top: 60px;
  padding-bottom: 60px;
}

.footer h3{
  margin-bottom: 32px;
}

.footer-contact ul{
  margin-bottom: 32px;
}

.footer-contact li:nth-child(even):after{
  content: "";
  display: block;
  max-width: 360px;
  height: 2px;
  background: var(--cor-11);
  margin-top: 16px;
}
.button{
  display: inline-block;
  padding: 16px 32px;
  background: linear-gradient(#FFBF00, #F2A60C);
  border-radius: 4px;
  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  color: var(--cor-p5);
  font: 600 1.125rem/1.35 var(--font-poppins);
  max-width: max-content;
  border: none;
  cursor: pointer;
}

.footer li{
  margin-bottom: 16px;
}

.footer-socia_media{
  display: flex;
  gap: 32px;
}

.footer a:hover{
  color: var(--cor-0);
}

.footer-payment ul{
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* 4 colunas de 1 fr */
  margin: 0 auto;
}

.footer-payment a{
  margin: auto;
}


.footer-copy{
  grid-column: 1/-1;
  margin-top: 40px;
  text-align: center;
}

@media(max-width: 800px){
  .footer > img{
    display: none;
  }

  .footer{
    grid-template-columns: 1fr 1fr;
  }
}

@media(max-width: 600px){

  .footer{
    grid-template-columns: 1fr;
    gap: 60px;
  }

  .footer-copy{
    margin-top: 0px;
  }
}